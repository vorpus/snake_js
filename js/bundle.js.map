{"version":3,"sources":["webpack:///webpack/bootstrap 7ad255486e9a5617c47c","webpack:///./js/main.js","webpack:///./js/snake.js","webpack:///./js/snake-view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACPD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA,oBAAmB,QAAQ;AAC3B;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvJA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7ad255486e9a5617c47c","const SnakeGame = require('./snake.js');\nconst SnakeView = require('./snake-view.js');\n\n$( () => {\n  const rootEl = $('.snake');\n  const game = new SnakeGame();\n  new SnakeView(game, rootEl);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 0\n// module chunks = 0","class Snake {\n  constructor () {\n    this.direction = \"S\";\n    this.segments = [new Coord(0,0)];\n    this.length = 1;\n  }\n\n  move() {\n    let currentLoc = this.segments[this.segments.length-1];\n    let nextLoc = currentLoc.plus(this.direction);\n    this.segments.push(nextLoc);\n    this.removeTail();\n  }\n\n  removeTail() {\n    while (this.segments.length > this.length) {\n      this.segments.shift();\n    }\n  }\n\n  turn(dir) {\n    this.direction = dir;\n  }\n\n  eat() {\n    this.length += 3;\n  }\n}\n\nclass Coord {\n  constructor(x,y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  equals(pos) { //another coord obj\n    if (this.x === pos.x && this.y === pos.y) {\n      return true;\n    }\n    return false;\n  }\n\n  getCoord() {\n    return [this.x,this.y];\n  }\n\n  plus(dir) {\n    let nextLoc;\n    switch(dir) {\n      case \"N\":\n        nextLoc = new Coord(this.x, this.y - 1);\n        break;\n      case \"S\":\n        nextLoc = new Coord(this.x, this.y + 1);\n        break;\n      case \"E\":\n        nextLoc = new Coord(this.x + 1, this.y);\n        break;\n      case \"W\":\n        nextLoc = new Coord(this.x - 1, this.y);\n        break;\n    }\n    return nextLoc;\n  }\n}\n\n\nclass Board {\n  constructor() {\n    this.grid = Board.makeGrid();\n    this.snake = new Snake();\n    this.apples = [];\n    this.newApple();\n  }\n\n  deadSnake() {\n    this.snake = new Snake();\n  }\n\n  snakeBounds () {\n    let snakeHead = this.snake.segments[this.snake.segments.length-1].getCoord();\n    if (snakeHead[0] > 19 || snakeHead[0] < 0 || snakeHead[1] > 19 || snakeHead[1] < 0) {\n      console.log('you lose');\n      return true;\n    }\n  }\n\n  snakeSuicide() {\n    let snakeHead = this.snake.segments[this.snake.segments.length-1];\n    let snakeBody = this.snake.segments.slice(0, this.snake.segments.length-1);\n\n    let suicide = false;\n    snakeBody.forEach( (body) => {\n      if (body.equals(snakeHead)) {\n        console.log('you suicided');\n        suicide = true;\n      }\n    });\n    return suicide;\n  }\n\n  snakeEating() {\n    let snakeHead = this.snake.segments[this.snake.segments.length-1];\n    let overlapApple;\n\n    this.apples.forEach( (apple) => {\n      if (apple.equals(snakeHead)) {\n        this.apples.splice(this.apples.indexOf(apple), 1);\n        this.snake.eat();\n        this.newApple();\n      }\n    });\n  }\n\n  newApple() {\n    let appleCoord = new Coord(Math.floor(Math.random() * 20), Math.floor(Math.random() * 20));\n    while( this.appleOverlapSnake(appleCoord) ) {\n      appleCoord = new Coord(Math.floor(Math.random() * 20), Math.floor(Math.random() * 20));\n      console.log('position filled by snake. remaking');\n    }\n    this.apples.push(appleCoord);\n  }\n\n  appleOverlapSnake(appleCoord) {\n    let overlap = false;\n    this.snake.segments.forEach( (seg) => {\n      if (seg.equals(appleCoord)) {\n        overlap = true;\n      }\n    });\n    this.apples.forEach( (seg) => {\n      if (seg.equals(appleCoord)) {\n        overlap = true;\n      }\n    });\n    return overlap;\n  }\n\n  static makeGrid() {\n    const grid = [];\n\n    for (let i = 0; i < 20; i++) {\n      grid.push([]);\n      for (let j = 0; j < 20; j++) {\n        grid[i].push(null);\n      }\n    }\n    return grid;\n  }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/snake.js\n// module id = 1\n// module chunks = 0","const Board = require('./snake.js');\n\nclass View {\n  constructor(game, $view) {\n    this.game = game;\n    this.$view = $view;\n    this.board = new Board();\n    this.render();\n    $('body').on(\"keydown\", (ev) => {\n      this.handleKeyEvent(ev);\n    });\n\n    // window.setTimeout(() => {\n      window.setInterval(() => {\n        this.step();\n        this.render();\n        if (this.board.snakeBounds() || this.board.snakeSuicide()) {\n          this.board.deadSnake();\n        }\n\n      }, 50);\n\n  }\n\n  render() {\n    let grid = this.board.grid;\n    this.$view.empty();\n    this.board.grid.forEach( (el, i) => {\n      let $gridRow = $('<ul class=\"group\"></ul>');\n      el.forEach( (_,j) => {\n        $gridRow.append($('<li></li>'));\n      });\n      this.$view.append($gridRow);\n    });\n    // this.$view.each(() => {\n    //   console.log(this);\n    // });\n    this.makeSnake();\n    this.makeApple();\n    // console.log()\n  }\n\n  makeSnake() {\n    this.board.snake.segments.forEach((seg) => {\n      $($($('ul')[seg.y]).children()[seg.x]).css('background','blue');\n    });\n  }\n\n  makeApple() {\n    this.board.apples.forEach( (apple) => {\n      $($($('ul')[apple.y]).children()[apple.x]).css('background','red');\n    });\n  }\n\n  handleKeyEvent(ev) {\n    switch(String.fromCharCode(ev.which)) {\n      case \"&\":\n        this.board.snake.turn(\"N\");\n        break;\n      case \"'\":\n        this.board.snake.turn(\"E\");\n        break;\n      case \"%\":\n        this.board.snake.turn(\"W\");\n        break;\n      case \"(\":\n        this.board.snake.turn(\"S\");\n        break;\n      default:\n        console.log('invalid key');\n    }\n    // console.log(this.board.snake.direction);\n  }\n\n  step () {\n    this.board.snake.move();\n    this.board.snakeEating();\n  }\n}\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/snake-view.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}